name: libSGM CI

on: [push, pull_request]

jobs:
  test:
    name: Install and test libSGM
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v2
    - name: Test
      run: |
       make test-cpp
       gcov -r . --object-directory=`pwd` > gcov-report.xml
    - name: Setup python
      uses: actions/setup-python@v5
      with:
        python-version: '3.8'
    - name: Install libSGM and dependencies
      run: |
          python -m pip install --upgrade pip
          pip list
          python -V
          pip install .[dev,sgm-python]
    - name: Test with pytest
      run: |
          pytest --junitxml=pytest-report.xml --cov-config=.coveragerc --cov-report xml --cov
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1

  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    needs: [test]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.22.0

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5

      - name: Install build
        run: python -m pip install build

      - name: Build sdist
        run: python -m build --sdist

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: dist/*.tar.gz

  upload_pypi:
    name: Publish package on pypi
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    environment: pypi
    permissions:
      id-token: write
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: cibw-*
          path: dist
          merge-multiple: true

      - uses: pypa/gh-action-pypi-publish@release/v1
